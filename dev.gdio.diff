diff --git a/lua/avante/config.lua b/lua/avante/config.lua
--- ./lua/avante/config.lua
+++ ./lua/avante/config.lua
@@ -47,10 +47,10 @@ M.defaults = {
   ---@type AvanteSupportedProvider
   claude = {
       endpoint = "https://api.anthropic.com",
-    model = "claude-3-5-sonnet-20241022",
+      model = "claude-3-haiku-20240307",
       timeout = 30000, -- Timeout in milliseconds
       temperature = 0,
-    max_tokens = 8000,
+      max_tokens = 4098,
     },
   ---@type AvanteSupportedProvider
   gemini = {
diff --git a/lua/avante/llm.lua b/lua/avante/llm.lua
--- ./lua/avante/llm.lua
+++ ./lua/avante/llm.lua
@@ -8,6 +8,7 @@ local Utils = require("avante.utils")
 local Config = require("avante.config")
 local Path = require("avante.path")
 local P = require("avante.providers")
+local Logger = require("avante.logger")
 
 ---@class avante.LLM
 local M = {}
@@ -197,6 +198,14 @@ M._stream = function(opts, Provider)
       opts.on_complete(nil)
     end,
     callback = function(result)
+      Logger.debug_response({
+        event = "curl_callback",
+        status = result.status,
+        headers = result.headers,
+        body_size = result.body and #result.body or 0,
+        body = result.body
+      })
+
       active_job = nil
       cleanup()
       if result.status >= 400 then
diff --git a/lua/avante/sidebar.lua b/lua/avante/sidebar.lua
--- ./lua/avante/sidebar.lua
+++ ./lua/avante/sidebar.lua
@@ -1730,16 +1730,6 @@ function Sidebar:render(opts)
     xpcall(function() api.nvim_buf_set_name(self.result.bufnr, RESULT_BUF_NAME) end, function(_) end)
   end)
 
-  self.result:map("n", "q", function()
-    Llm.cancel_inflight_request()
-    self:close()
-  end)
-
-  self.result:map("n", "<Esc>", function()
-    Llm.cancel_inflight_request()
-    self:close()
-  end)
-
   self:create_input(opts)
 
   self:update_content_with_history(chat_history)
diff --git a/neovim/init.lua b/neovim/init.lua
new file mode 100644
--- /dev/null
+++ ./neovim/init.lua
@@ -0,0 +1,15 @@
+-- init.lua
+vim.cmd 'set runtimepath^=~/.vim runtimepath+=~/.vim/after'
+vim.cmd 'let &packpath = &runtimepath'
+
+-- 禁用终端的 GUI 颜色支持
+vim.o.termguicolors = false
+
+-- 设置当前的颜色方案为 'vim'
+vim.cmd('colorscheme vim')
+
+vim.cmd 'source ~/.vimrc'
+
+require('plugins')
+require('keymaps')
+require('nvim_molten_config')
